/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_words {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp ESCAPE
&kp LCTRL       &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RSHIFT
                              &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &none         &none         &none         &none         &none           &none               &kp END         &kp HOME      &none                &none  &none
&none       &none         &none         &none         &none         &none           &kp LEFT_ARROW      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW      &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LA(LEFT_ARROW)  &kp PAGE_DOWN   &kp PAGE_UP   &kp LA(RIGHT_ARROW)  &none  &none
                                        &kp LGUI      &none         &kp SPACE       &kp RET             &none           &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none           &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp LEFT_SHIFT  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp PLUS   &kp EQUAL       &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp RCTRL       &kp NUMBER_6     &kp N7        &kp N8        &kp N9        &kp N0         &kp MINUS  &kp UNDERSCORE  &kp TILDE      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION
                                               &kp LGUI      &none         &kp SPACE      &kp RET    &none           &kp RIGHT_GUI
            >;
        };

        accent_layer {
            bindings = <
&trans  &trans     &trans  &kp RA(E)  &trans  &trans    &trans  &kp RA(U)  &kp RA(I)  &kp RA(O)  &trans  &trans
&trans  &kp RA(A)  &trans  &trans     &trans  &trans    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans     &trans  &trans     &trans  &trans    &trans  &trans     &trans     &trans     &trans  &trans
                           &trans     &trans  &trans    &trans  &trans     &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        accent_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
